/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED BY BPFTOOL! */
#ifndef __PROG_BPF_SKEL_H__
#define __PROG_BPF_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

#define BPF_SKEL_SUPPORTS_MAP_AUTO_ATTACH 1

struct prog_bpf {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *counters;
	} maps;
	struct {
		struct bpf_program *on_hit;
		struct bpf_program *on_miss;
	} progs;
	struct {
		struct bpf_link *on_hit;
		struct bpf_link *on_miss;
	} links;

#ifdef __cplusplus
	static inline struct prog_bpf *open(const struct bpf_object_open_opts *opts = nullptr);
	static inline struct prog_bpf *open_and_load();
	static inline int load(struct prog_bpf *skel);
	static inline int attach(struct prog_bpf *skel);
	static inline void detach(struct prog_bpf *skel);
	static inline void destroy(struct prog_bpf *skel);
	static inline const void *elf_bytes(size_t *sz);
#endif /* __cplusplus */
};

static void
prog_bpf__destroy(struct prog_bpf *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
prog_bpf__create_skeleton(struct prog_bpf *obj);

static inline struct prog_bpf *
prog_bpf__open_opts(const struct bpf_object_open_opts *opts)
{
	struct prog_bpf *obj;
	int err;

	obj = (struct prog_bpf *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = prog_bpf__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	prog_bpf__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct prog_bpf *
prog_bpf__open(void)
{
	return prog_bpf__open_opts(NULL);
}

static inline int
prog_bpf__load(struct prog_bpf *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct prog_bpf *
prog_bpf__open_and_load(void)
{
	struct prog_bpf *obj;
	int err;

	obj = prog_bpf__open();
	if (!obj)
		return NULL;
	err = prog_bpf__load(obj);
	if (err) {
		prog_bpf__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
prog_bpf__attach(struct prog_bpf *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
prog_bpf__detach(struct prog_bpf *obj)
{
	bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *prog_bpf__elf_bytes(size_t *sz);

static inline int
prog_bpf__create_skeleton(struct prog_bpf *obj)
{
	struct bpf_object_skeleton *s;
	struct bpf_map_skeleton *map __attribute__((unused));
	int err;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)	{
		err = -ENOMEM;
		goto err;
	}

	s->sz = sizeof(*s);
	s->name = "prog_bpf";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 1;
	s->map_skel_sz = 24;
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt,
			sizeof(*s->maps) > 24 ? sizeof(*s->maps) : 24);
	if (!s->maps) {
		err = -ENOMEM;
		goto err;
	}

	map = (struct bpf_map_skeleton *)((char *)s->maps + 0 * s->map_skel_sz);
	map->name = "counters";
	map->map = &obj->maps.counters;

	/* programs */
	s->prog_cnt = 2;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs) {
		err = -ENOMEM;
		goto err;
	}

	s->progs[0].name = "on_hit";
	s->progs[0].prog = &obj->progs.on_hit;
	s->progs[0].link = &obj->links.on_hit;

	s->progs[1].name = "on_miss";
	s->progs[1].prog = &obj->progs.on_miss;
	s->progs[1].link = &obj->links.on_miss;

	s->data = prog_bpf__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return err;
}

static inline const void *prog_bpf__elf_bytes(size_t *sz)
{
	static const char data[] __attribute__((__aligned__(8))) = "\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xc8\x1c\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x1b\0\
\x01\0\xb4\x01\0\0\0\0\0\0\x63\x1a\xfc\xff\0\0\0\0\xbf\xa2\0\0\0\0\0\0\x07\x02\
\0\0\xfc\xff\xff\xff\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x01\0\0\0\
\x15\0\x02\0\0\0\0\0\xb7\x01\0\0\x01\0\0\0\xdb\x10\0\0\x01\0\0\0\xb4\0\0\0\0\0\
\0\0\x95\0\0\0\0\0\0\0\xb4\x01\0\0\x01\0\0\0\x63\x1a\xfc\xff\0\0\0\0\xbf\xa2\0\
\0\0\0\0\0\x07\x02\0\0\xfc\xff\xff\xff\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\
\0\0\0\x01\0\0\0\x15\0\x02\0\0\0\0\0\xb7\x01\0\0\x01\0\0\0\xdb\x10\0\0\x01\0\0\
\0\xb4\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x47\x50\x4c\0\x1e\0\0\0\x05\0\x08\0\x02\0\0\0\x08\0\0\
\0\x0e\0\0\0\x04\x38\x58\x01\x50\0\x04\x98\x01\xb8\x01\x01\x50\0\x01\x11\x01\
\x25\x25\x13\x05\x03\x25\x72\x17\x10\x17\x1b\x25\x11\x1b\x12\x06\x73\x17\x8c\
\x01\x17\0\0\x02\x34\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\0\0\x03\x26\0\x49\x13\0\
\0\x04\x0f\0\x49\x13\0\0\x05\x15\x01\x49\x13\x27\x19\0\0\x06\x05\0\x49\x13\0\0\
\x07\x0f\0\0\0\x08\x26\0\0\0\x09\x34\0\x03\x25\x49\x13\x3f\x19\x3a\x0b\x3b\x0b\
\x02\x18\0\0\x0a\x01\x01\x49\x13\0\0\x0b\x21\0\x49\x13\x37\x0b\0\0\x0c\x24\0\
\x03\x25\x3e\x0b\x0b\x0b\0\0\x0d\x24\0\x03\x25\x0b\x0b\x3e\x0b\0\0\x0e\x13\x01\
\x0b\x0b\x3a\x0b\x3b\x0b\0\0\x0f\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\x38\x0b\
\0\0\x10\x16\0\x49\x13\x03\x25\x3a\x0b\x3b\x05\0\0\x11\x2e\x01\x11\x1b\x12\x06\
\x40\x18\x7a\x19\x03\x25\x3a\x0b\x3b\x0b\x27\x19\x49\x13\x3f\x19\0\0\x12\x05\0\
\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x13\x34\0\x02\x18\x03\x25\x3a\x0b\x3b\x0b\
\x49\x13\0\0\x14\x34\0\x02\x22\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x15\x13\x01\
\x03\x25\x0b\x0b\x3a\x0b\x3b\x05\0\0\x16\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x05\
\x38\x0b\0\0\x17\x0d\0\x49\x13\x3a\x0b\x3b\x05\x38\x0b\0\0\x18\x17\x01\x0b\x0b\
\x3a\x0b\x3b\x05\0\0\x19\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x05\x0d\x0b\x6b\x0b\
\0\0\0\x5d\x03\0\0\x05\0\x01\x08\0\0\0\0\x01\0\x1d\0\x01\x08\0\0\0\0\0\0\0\x02\
\x02\xc0\0\0\0\x08\0\0\0\x0c\0\0\0\x02\x03\x2f\0\0\0\x01\x40\x03\x34\0\0\0\x04\
\x39\0\0\0\x05\x49\0\0\0\x06\x49\0\0\0\x06\x4a\0\0\0\0\x07\x04\x4f\0\0\0\x08\
\x09\x04\x5b\0\0\0\0\x25\x02\xa1\0\x0a\x67\0\0\0\x0b\x6b\0\0\0\x04\0\x0c\x05\
\x06\x01\x0d\x06\x08\x07\x09\x07\x7a\0\0\0\0\x0b\x02\xa1\x01\x0e\x20\0\x06\x0f\
\x08\xa3\0\0\0\0\x07\0\x0f\x0a\xb8\0\0\0\0\x08\x08\x0f\x0b\xc9\0\0\0\0\x09\x10\
\x0f\x0f\xe4\0\0\0\0\x0a\x18\0\x04\xa8\0\0\0\x0a\xb4\0\0\0\x0b\x6b\0\0\0\x06\0\
\x0c\x09\x05\x04\x04\xbd\0\0\0\x0a\xb4\0\0\0\x0b\x6b\0\0\0\x02\0\x04\xce\0\0\0\
\x10\xd7\0\0\0\x0e\x02\xb5\x78\x10\xe0\0\0\0\x0d\x02\xa7\x78\x0c\x0c\x07\x04\
\x04\xe9\0\0\0\x10\xf2\0\0\0\x12\x02\x4d\x77\x10\xfb\0\0\0\x11\x02\x45\x77\x0c\
\x10\x07\x08\x11\x02\x60\0\0\0\x01\x5a\x13\0\x0f\xb4\0\0\0\x12\x16\0\x0f\x57\
\x01\0\0\x13\x02\x91\x04\x0b\0\x11\xce\0\0\0\x14\0\x15\0\x12\xe4\0\0\0\0\x11\
\x03\x60\0\0\0\x01\x5a\x14\0\x1b\xb4\0\0\0\x12\x16\0\x1b\x57\x01\0\0\x13\x02\
\x91\x04\x0b\0\x1d\xce\0\0\0\x14\x01\x15\0\x1e\xe4\0\0\0\0\x04\x5c\x01\0\0\x15\
\x43\xb8\x02\x99\xb9\x16\x17\x81\x01\0\0\x02\x9a\xb9\0\x16\x41\xf2\0\0\0\x02\
\x9b\xb9\xa8\x16\x42\xf2\0\0\0\x02\x9c\xb9\xb0\0\x10\x8a\x01\0\0\x40\x02\x97\
\xb9\x15\x3f\xa8\x02\xc2\x83\x16\x18\xa9\x02\0\0\x02\xc3\x83\0\x16\x1a\xa9\x02\
\0\0\x02\xc4\x83\x08\x16\x1b\xa9\x02\0\0\x02\xc5\x83\x10\x16\x1c\xa9\x02\0\0\
\x02\xc6\x83\x18\x16\x1d\xa9\x02\0\0\x02\xc7\x83\x20\x16\x1e\xa9\x02\0\0\x02\
\xc8\x83\x28\x16\x1f\xa9\x02\0\0\x02\xc9\x83\x30\x16\x20\xa9\x02\0\0\x02\xca\
\x83\x38\x16\x21\xa9\x02\0\0\x02\xcb\x83\x40\x16\x22\xa9\x02\0\0\x02\xcc\x83\
\x48\x16\x23\xa9\x02\0\0\x02\xcd\x83\x50\x16\x24\xa9\x02\0\0\x02\xce\x83\x58\
\x16\x25\xa9\x02\0\0\x02\xcf\x83\x60\x16\x26\xa9\x02\0\0\x02\xd0\x83\x68\x16\
\x27\xa9\x02\0\0\x02\xd1\x83\x70\x16\x28\xa9\x02\0\0\x02\xd2\x83\x78\x16\x29\
\xa9\x02\0\0\x02\xd3\x83\x80\x17\x43\x02\0\0\x02\xd4\x83\x88\x18\x08\x02\xd4\
\x83\x16\x2a\xad\x02\0\0\x02\xd5\x83\0\x16\x2e\xe9\0\0\0\x02\xd6\x83\0\x16\x2f\
\xc3\x02\0\0\x02\xd7\x83\0\0\x16\x32\xa9\x02\0\0\x02\xd9\x83\x90\x16\x33\xa9\
\x02\0\0\x02\xda\x83\x98\x17\x84\x02\0\0\x02\xdb\x83\xa0\x18\x08\x02\xdb\x83\
\x16\x34\xad\x02\0\0\x02\xdc\x83\0\x16\x35\xe9\0\0\0\x02\xdd\x83\0\x16\x36\xeb\
\x02\0\0\x02\xde\x83\0\0\0\x0c\x19\x07\x08\x10\xb6\x02\0\0\x2d\x02\x05\x78\x10\
\xbf\x02\0\0\x2c\x02\xfb\x77\x0c\x2b\x07\x02\x15\x2f\x08\x02\xab\x83\x19\x2a\
\xe9\0\0\0\x02\xac\x83\x10\0\x19\x30\xe9\0\0\0\x02\xad\x83\x02\x10\x19\x31\xe9\
\0\0\0\x02\xae\x83\x01\x12\0\x15\x36\x08\x02\xb1\x83\x19\x34\xe9\0\0\0\x02\xb2\
\x83\x10\0\x19\x37\xe9\0\0\0\x02\xb3\x83\x01\x10\x19\x38\xe9\0\0\0\x02\xb4\x83\
\x01\x11\x19\x39\xe9\0\0\0\x02\xb5\x83\x01\x12\x19\x3a\xe9\0\0\0\x02\xb7\x83\
\x08\x20\x19\x08\xe9\0\0\0\x02\xb9\x83\x04\x30\x19\x3b\xe9\0\0\0\x02\xbb\x83\
\x01\x38\x19\x3c\xe9\0\0\0\x02\xbc\x83\x01\x39\x19\x3d\xe9\0\0\0\x02\xbd\x83\
\x01\x3a\x19\x3e\xe9\0\0\0\x02\xbf\x83\x04\x3c\0\0\x14\x01\0\0\x05\0\0\0\0\0\0\
\0\x2c\0\0\0\x37\0\0\0\x9e\0\0\0\xb2\0\0\0\xba\0\0\0\xbf\0\0\0\xd3\0\0\0\xdc\0\
\0\0\xe1\0\0\0\xe5\0\0\0\xf1\0\0\0\xf5\0\0\0\x02\x01\0\0\x08\x01\0\0\x0c\x01\0\
\0\x12\x01\0\0\x25\x01\0\0\x2b\x01\0\0\x2f\x01\0\0\x36\x01\0\0\x3e\x01\0\0\x42\
\x01\0\0\x46\x01\0\0\x4b\x01\0\0\x4f\x01\0\0\x5d\x01\0\0\x61\x01\0\0\x65\x01\0\
\0\x69\x01\0\0\x6c\x01\0\0\x6f\x01\0\0\x73\x01\0\0\x77\x01\0\0\x7a\x01\0\0\x7d\
\x01\0\0\x80\x01\0\0\x83\x01\0\0\x86\x01\0\0\x89\x01\0\0\x8c\x01\0\0\x94\x01\0\
\0\x97\x01\0\0\x9a\x01\0\0\xa9\x01\0\0\xaf\x01\0\0\xb3\x01\0\0\xb7\x01\0\0\xbf\
\x01\0\0\xc2\x01\0\0\xc6\x01\0\0\xcc\x01\0\0\xcf\x01\0\0\xd2\x01\0\0\xd6\x01\0\
\0\xde\x01\0\0\xe2\x01\0\0\xea\x01\0\0\xee\x01\0\0\xf5\x01\0\0\xfd\x01\0\0\0\
\x02\0\0\x07\x02\0\0\x0f\x02\0\0\x17\x02\0\0\x2a\x02\0\0\x38\x02\0\0\x3d\x02\0\
\0\x63\x6c\x61\x6e\x67\x20\x76\x65\x72\x73\x69\x6f\x6e\x20\x32\x30\x2e\x31\x2e\
\x38\x20\x28\x46\x65\x64\x6f\x72\x61\x20\x32\x30\x2e\x31\x2e\x38\x2d\x34\x2e\
\x66\x63\x34\x32\x29\0\x70\x72\x6f\x67\x2e\x62\x70\x66\x2e\x63\0\x2f\x68\x6f\
\x6d\x65\x2f\x61\x6e\x74\x68\x6f\x6e\x79\x2f\x44\x6f\x63\x75\x6d\x65\x6e\x74\
\x73\x2f\x45\x66\x69\x6d\x6f\x6e\x2f\x45\x66\x69\x4d\x6f\x6e\x2e\x43\x50\x55\
\x43\x6f\x6e\x73\x75\x6d\x70\x74\x69\x6f\x6e\x4d\x6f\x64\x75\x6c\x65\x2f\x54\
\x65\x73\x74\x69\x6e\x67\x5f\x45\x76\x65\x6e\x74\x73\x2f\x50\x65\x72\x66\x5f\
\x65\x76\x65\x6e\x74\x73\x2f\x43\x6f\x6e\x73\x75\x6d\x70\x74\x69\x6f\x6e\x5f\
\x74\x65\x73\x74\0\x62\x70\x66\x5f\x6d\x61\x70\x5f\x6c\x6f\x6f\x6b\x75\x70\x5f\
\x65\x6c\x65\x6d\0\x4c\x49\x43\x45\x4e\x53\x45\0\x63\x68\x61\x72\0\x5f\x5f\x41\
\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x63\x6f\x75\
\x6e\x74\x65\x72\x73\0\x74\x79\x70\x65\0\x69\x6e\x74\0\x6d\x61\x78\x5f\x65\x6e\
\x74\x72\x69\x65\x73\0\x6b\x65\x79\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\
\x6e\x74\0\x5f\x5f\x75\x33\x32\0\x75\x33\x32\0\x76\x61\x6c\x75\x65\0\x75\x6e\
\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x5f\x5f\x75\
\x36\x34\0\x75\x36\x34\0\x6f\x6e\x5f\x68\x69\x74\0\x6f\x6e\x5f\x6d\x69\x73\x73\
\0\x76\x61\x6c\0\x63\x74\x78\0\x72\x65\x67\x73\0\x72\x31\x35\0\x75\x6e\x73\x69\
\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\0\x72\x31\x34\0\x72\x31\x33\0\x72\x31\x32\
\0\x62\x70\0\x62\x78\0\x72\x31\x31\0\x72\x31\x30\0\x72\x39\0\x72\x38\0\x61\x78\
\0\x63\x78\0\x64\x78\0\x73\x69\0\x64\x69\0\x6f\x72\x69\x67\x5f\x61\x78\0\x69\
\x70\0\x63\x73\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\x74\0\x5f\
\x5f\x75\x31\x36\0\x75\x31\x36\0\x63\x73\x78\0\x66\x72\x65\x64\x5f\x63\x73\0\
\x73\x6c\0\x77\x66\x65\0\x66\x6c\x61\x67\x73\0\x73\x70\0\x73\x73\0\x73\x73\x78\
\0\x66\x72\x65\x64\x5f\x73\x73\0\x73\x74\x69\0\x73\x77\x65\x76\x65\x6e\x74\0\
\x6e\x6d\x69\0\x76\x65\x63\x74\x6f\x72\0\x65\x6e\x63\x6c\x61\x76\x65\0\x6c\x6d\
\0\x6e\x65\x73\x74\x65\x64\0\x69\x6e\x73\x6e\x6c\x65\x6e\0\x70\x74\x5f\x72\x65\
\x67\x73\0\x62\x70\x66\x5f\x75\x73\x65\x72\x5f\x70\x74\x5f\x72\x65\x67\x73\x5f\
\x74\0\x73\x61\x6d\x70\x6c\x65\x5f\x70\x65\x72\x69\x6f\x64\0\x61\x64\x64\x72\0\
\x62\x70\x66\x5f\x70\x65\x72\x66\x5f\x65\x76\x65\x6e\x74\x5f\x64\x61\x74\x61\0\
\x24\0\0\0\x05\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x60\0\0\
\0\0\0\0\0\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\x60\x04\0\0\x60\x04\0\0\x1a\x03\0\
\0\0\0\0\0\0\0\0\x02\x03\0\0\0\x01\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\0\0\0\
\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x06\0\0\0\x05\0\0\0\0\0\0\x01\x04\0\0\
\0\x20\0\0\0\0\0\0\0\0\0\0\x02\x06\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\
\x04\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\x02\x08\0\0\0\x19\0\0\0\0\0\0\x08\x09\0\0\0\
\x1d\0\0\0\0\0\0\x08\x0a\0\0\0\x23\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\
\0\0\0\x02\x0c\0\0\0\x30\0\0\0\0\0\0\x08\x0d\0\0\0\x34\0\0\0\0\0\0\x08\x0e\0\0\
\0\x3a\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\0\0\0\0\0\x04\0\0\x04\x20\0\0\0\x4d\0\
\0\0\x01\0\0\0\0\0\0\0\x52\0\0\0\x05\0\0\0\x40\0\0\0\x5e\0\0\0\x07\0\0\0\x80\0\
\0\0\x62\0\0\0\x0b\0\0\0\xc0\0\0\0\x68\0\0\0\0\0\0\x0e\x0f\0\0\0\x01\0\0\0\0\0\
\0\0\0\0\0\x02\x12\0\0\0\x71\0\0\0\x03\0\0\x04\xb8\0\0\0\x85\0\0\0\x13\0\0\0\0\
\0\0\0\x8a\0\0\0\x0d\0\0\0\x40\x05\0\0\x98\0\0\0\x0d\0\0\0\x80\x05\0\0\x9d\0\0\
\0\0\0\0\x08\x14\0\0\0\xb0\0\0\0\x15\0\0\x04\xa8\0\0\0\xb8\0\0\0\x15\0\0\0\0\0\
\0\0\xbc\0\0\0\x15\0\0\0\x40\0\0\0\xc0\0\0\0\x15\0\0\0\x80\0\0\0\xc4\0\0\0\x15\
\0\0\0\xc0\0\0\0\xc8\0\0\0\x15\0\0\0\0\x01\0\0\xcb\0\0\0\x15\0\0\0\x40\x01\0\0\
\xce\0\0\0\x15\0\0\0\x80\x01\0\0\xd2\0\0\0\x15\0\0\0\xc0\x01\0\0\xd6\0\0\0\x15\
\0\0\0\0\x02\0\0\xd9\0\0\0\x15\0\0\0\x40\x02\0\0\xdc\0\0\0\x15\0\0\0\x80\x02\0\
\0\xdf\0\0\0\x15\0\0\0\xc0\x02\0\0\xe2\0\0\0\x15\0\0\0\0\x03\0\0\xe5\0\0\0\x15\
\0\0\0\x40\x03\0\0\xe8\0\0\0\x15\0\0\0\x80\x03\0\0\xeb\0\0\0\x15\0\0\0\xc0\x03\
\0\0\xf3\0\0\0\x15\0\0\0\0\x04\0\0\0\0\0\0\x16\0\0\0\x40\x04\0\0\xf6\0\0\0\x15\
\0\0\0\x80\x04\0\0\xfc\0\0\0\x15\0\0\0\xc0\x04\0\0\0\0\0\0\x1b\0\0\0\0\x05\0\0\
\xff\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\0\0\0\0\0\x03\0\0\x05\x08\0\0\0\x0d\x01\
\0\0\x17\0\0\0\0\0\0\0\x10\x01\0\0\x0c\0\0\0\0\0\0\0\x14\x01\0\0\x1a\0\0\0\0\0\
\0\0\x1c\x01\0\0\0\0\0\x08\x18\0\0\0\x20\x01\0\0\0\0\0\x08\x19\0\0\0\x26\x01\0\
\0\0\0\0\x01\x02\0\0\0\x10\0\0\0\x14\x01\0\0\x03\0\0\x84\x08\0\0\0\x0d\x01\0\0\
\x0c\0\0\0\0\0\0\x10\x35\x01\0\0\x0c\0\0\0\x10\0\0\x02\x38\x01\0\0\x0c\0\0\0\
\x12\0\0\x01\0\0\0\0\x03\0\0\x05\x08\0\0\0\x3c\x01\0\0\x17\0\0\0\0\0\0\0\x3f\
\x01\0\0\x0c\0\0\0\0\0\0\0\x43\x01\0\0\x1c\0\0\0\0\0\0\0\x43\x01\0\0\x0a\0\0\
\x84\x08\0\0\0\x3c\x01\0\0\x0c\0\0\0\0\0\0\x10\x4b\x01\0\0\x0c\0\0\0\x10\0\0\
\x01\x4f\x01\0\0\x0c\0\0\0\x11\0\0\x01\x57\x01\0\0\x0c\0\0\0\x12\0\0\x01\x5b\
\x01\0\0\x0c\0\0\0\x20\0\0\x08\x4d\0\0\0\x0c\0\0\0\x30\0\0\x04\x62\x01\0\0\x0c\
\0\0\0\x38\0\0\x01\x6a\x01\0\0\x0c\0\0\0\x39\0\0\x01\x6d\x01\0\0\x0c\0\0\0\x3a\
\0\0\x01\x74\x01\0\0\x0c\0\0\0\x3c\0\0\x04\0\0\0\0\x01\0\0\x0d\x02\0\0\0\x7c\
\x01\0\0\x11\0\0\0\x80\x01\0\0\x01\0\0\x0c\x1d\0\0\0\0\0\0\0\x01\0\0\x0d\x02\0\
\0\0\x7c\x01\0\0\x11\0\0\0\xb9\x02\0\0\x01\0\0\x0c\x1f\0\0\0\xff\x02\0\0\0\0\0\
\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x21\0\0\0\x04\0\0\0\x04\0\
\0\0\x04\x03\0\0\0\0\0\x0e\x22\0\0\0\x01\0\0\0\x0c\x03\0\0\x01\0\0\x0f\0\0\0\0\
\x10\0\0\0\0\0\0\0\x20\0\0\0\x12\x03\0\0\x01\0\0\x0f\0\0\0\0\x23\0\0\0\0\0\0\0\
\x04\0\0\0\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\
\x54\x59\x50\x45\x5f\x5f\0\x75\x33\x32\0\x5f\x5f\x75\x33\x32\0\x75\x6e\x73\x69\
\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x75\x36\x34\0\x5f\x5f\x75\x36\x34\0\x75\x6e\
\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x74\x79\x70\
\x65\0\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x6b\x65\x79\0\x76\x61\x6c\
\x75\x65\0\x63\x6f\x75\x6e\x74\x65\x72\x73\0\x62\x70\x66\x5f\x70\x65\x72\x66\
\x5f\x65\x76\x65\x6e\x74\x5f\x64\x61\x74\x61\0\x72\x65\x67\x73\0\x73\x61\x6d\
\x70\x6c\x65\x5f\x70\x65\x72\x69\x6f\x64\0\x61\x64\x64\x72\0\x62\x70\x66\x5f\
\x75\x73\x65\x72\x5f\x70\x74\x5f\x72\x65\x67\x73\x5f\x74\0\x70\x74\x5f\x72\x65\
\x67\x73\0\x72\x31\x35\0\x72\x31\x34\0\x72\x31\x33\0\x72\x31\x32\0\x62\x70\0\
\x62\x78\0\x72\x31\x31\0\x72\x31\x30\0\x72\x39\0\x72\x38\0\x61\x78\0\x63\x78\0\
\x64\x78\0\x73\x69\0\x64\x69\0\x6f\x72\x69\x67\x5f\x61\x78\0\x69\x70\0\x66\x6c\
\x61\x67\x73\0\x73\x70\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\0\
\x63\x73\0\x63\x73\x78\0\x66\x72\x65\x64\x5f\x63\x73\0\x75\x31\x36\0\x5f\x5f\
\x75\x31\x36\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\x74\0\x73\
\x6c\0\x77\x66\x65\0\x73\x73\0\x73\x73\x78\0\x66\x72\x65\x64\x5f\x73\x73\0\x73\
\x74\x69\0\x73\x77\x65\x76\x65\x6e\x74\0\x6e\x6d\x69\0\x76\x65\x63\x74\x6f\x72\
\0\x65\x6e\x63\x6c\x61\x76\x65\0\x6c\x6d\0\x6e\x65\x73\x74\x65\x64\0\x69\x6e\
\x73\x6e\x6c\x65\x6e\0\x63\x74\x78\0\x6f\x6e\x5f\x68\x69\x74\0\x70\x65\x72\x66\
\x5f\x65\x76\x65\x6e\x74\0\x2f\x68\x6f\x6d\x65\x2f\x61\x6e\x74\x68\x6f\x6e\x79\
\x2f\x44\x6f\x63\x75\x6d\x65\x6e\x74\x73\x2f\x45\x66\x69\x6d\x6f\x6e\x2f\x45\
\x66\x69\x4d\x6f\x6e\x2e\x43\x50\x55\x43\x6f\x6e\x73\x75\x6d\x70\x74\x69\x6f\
\x6e\x4d\x6f\x64\x75\x6c\x65\x2f\x54\x65\x73\x74\x69\x6e\x67\x5f\x45\x76\x65\
\x6e\x74\x73\x2f\x50\x65\x72\x66\x5f\x65\x76\x65\x6e\x74\x73\x2f\x43\x6f\x6e\
\x73\x75\x6d\x70\x74\x69\x6f\x6e\x5f\x74\x65\x73\x74\x2f\x70\x72\x6f\x67\x2e\
\x62\x70\x66\x2e\x63\0\x69\x6e\x74\x20\x6f\x6e\x5f\x68\x69\x74\x28\x73\x74\x72\
\x75\x63\x74\x20\x62\x70\x66\x5f\x70\x65\x72\x66\x5f\x65\x76\x65\x6e\x74\x5f\
\x64\x61\x74\x61\x20\x2a\x63\x74\x78\x29\0\x20\x20\x20\x20\x75\x33\x32\x20\x6b\
\x65\x79\x20\x3d\x20\x30\x3b\0\x20\x20\x20\x20\x75\x36\x34\x20\x2a\x76\x61\x6c\
\x20\x3d\x20\x62\x70\x66\x5f\x6d\x61\x70\x5f\x6c\x6f\x6f\x6b\x75\x70\x5f\x65\
\x6c\x65\x6d\x28\x26\x63\x6f\x75\x6e\x74\x65\x72\x73\x2c\x20\x26\x6b\x65\x79\
\x29\x3b\0\x20\x20\x20\x20\x69\x66\x20\x28\x76\x61\x6c\x29\x20\x7b\0\x20\x20\
\x20\x20\x20\x20\x20\x20\x5f\x5f\x73\x79\x6e\x63\x5f\x66\x65\x74\x63\x68\x5f\
\x61\x6e\x64\x5f\x61\x64\x64\x28\x76\x61\x6c\x2c\x20\x31\x29\x3b\0\x20\x20\x20\
\x20\x72\x65\x74\x75\x72\x6e\x20\x30\x3b\0\x6f\x6e\x5f\x6d\x69\x73\x73\0\x69\
\x6e\x74\x20\x6f\x6e\x5f\x6d\x69\x73\x73\x28\x73\x74\x72\x75\x63\x74\x20\x62\
\x70\x66\x5f\x70\x65\x72\x66\x5f\x65\x76\x65\x6e\x74\x5f\x64\x61\x74\x61\x20\
\x2a\x63\x74\x78\x29\0\x20\x20\x20\x20\x75\x33\x32\x20\x6b\x65\x79\x20\x3d\x20\
\x31\x3b\0\x63\x68\x61\x72\0\x4c\x49\x43\x45\x4e\x53\x45\0\x2e\x6d\x61\x70\x73\
\0\x6c\x69\x63\x65\x6e\x73\x65\0\0\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x1c\0\0\0\
\x1c\0\0\0\xcc\0\0\0\xe8\0\0\0\0\0\0\0\x08\0\0\0\x87\x01\0\0\x02\0\0\0\0\0\0\0\
\x1e\0\0\0\x60\0\0\0\x20\0\0\0\x10\0\0\0\x87\x01\0\0\x0c\0\0\0\0\0\0\0\x92\x01\
\0\0\x04\x02\0\0\0\x3c\0\0\x08\0\0\0\x92\x01\0\0\x30\x02\0\0\x09\x44\0\0\x20\0\
\0\0\x92\x01\0\0\x41\x02\0\0\x10\x48\0\0\x38\0\0\0\x92\x01\0\0\x76\x02\0\0\x09\
\x4c\0\0\x48\0\0\0\x92\x01\0\0\x85\x02\0\0\x09\x50\0\0\x50\0\0\0\x92\x01\0\0\
\xab\x02\0\0\x05\x58\0\0\x60\0\0\0\x92\x01\0\0\xc1\x02\0\0\0\x6c\0\0\x68\0\0\0\
\x92\x01\0\0\xee\x02\0\0\x09\x74\0\0\x80\0\0\0\x92\x01\0\0\x41\x02\0\0\x10\x78\
\0\0\x98\0\0\0\x92\x01\0\0\x76\x02\0\0\x09\x7c\0\0\xa8\0\0\0\x92\x01\0\0\x85\
\x02\0\0\x09\x80\0\0\xb0\0\0\0\x92\x01\0\0\xab\x02\0\0\x05\x88\0\0\0\0\0\0\x0c\
\0\0\0\xff\xff\xff\xff\x04\0\x08\0\x08\x7c\x0b\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x60\0\0\0\0\0\0\0\x14\0\0\0\0\0\0\0\x60\0\0\0\0\0\0\0\x60\0\0\0\0\0\0\0\
\xb3\0\0\0\x05\0\x08\0\x69\0\0\0\x08\x01\x01\xfb\x0e\x0d\0\x01\x01\x01\x01\0\0\
\0\x01\0\0\x01\x01\x01\x1f\x03\0\0\0\0\x67\0\0\0\x78\0\0\0\x03\x01\x1f\x02\x0f\
\x05\x1e\x03\x7a\0\0\0\0\x7c\x9a\x53\xd6\x5d\x29\x75\xd5\x56\x36\x5a\xd8\x11\
\x5b\x71\x36\x85\0\0\0\x01\xa5\xa8\xa4\xf9\x34\xaa\x57\x11\xde\xc2\x3f\xec\x64\
\x5c\x40\x01\x97\0\0\0\x02\xd7\x08\xda\x7b\x19\x9d\xdc\x1b\x79\x03\x53\xcb\x83\
\x3c\x1d\xd3\x04\0\0\x09\x02\0\0\0\0\0\0\0\0\x03\x0f\x01\x05\x09\x0a\x21\x05\
\x10\x3d\x05\x09\x3d\x06\x03\x6d\x20\x06\x03\x14\x20\x05\x05\x22\x05\0\x34\x05\
\x09\x0a\x21\x05\x10\x3d\x05\x09\x3d\x06\x03\x61\x20\x06\x03\x20\x20\x05\x05\
\x22\x02\x02\0\x01\x01\x2f\x68\x6f\x6d\x65\x2f\x61\x6e\x74\x68\x6f\x6e\x79\x2f\
\x44\x6f\x63\x75\x6d\x65\x6e\x74\x73\x2f\x45\x66\x69\x6d\x6f\x6e\x2f\x45\x66\
\x69\x4d\x6f\x6e\x2e\x43\x50\x55\x43\x6f\x6e\x73\x75\x6d\x70\x74\x69\x6f\x6e\
\x4d\x6f\x64\x75\x6c\x65\x2f\x54\x65\x73\x74\x69\x6e\x67\x5f\x45\x76\x65\x6e\
\x74\x73\x2f\x50\x65\x72\x66\x5f\x65\x76\x65\x6e\x74\x73\x2f\x43\x6f\x6e\x73\
\x75\x6d\x70\x74\x69\x6f\x6e\x5f\x74\x65\x73\x74\0\x2f\x75\x73\x72\x2f\x69\x6e\
\x63\x6c\x75\x64\x65\x2f\x62\x70\x66\0\x2e\0\x70\x72\x6f\x67\x2e\x62\x70\x66\
\x2e\x63\0\x62\x70\x66\x5f\x68\x65\x6c\x70\x65\x72\x5f\x64\x65\x66\x73\x2e\x68\
\0\x76\x6d\x6c\x69\x6e\x75\x78\x2e\x68\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\xe8\0\0\0\x04\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x07\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x03\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x0b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0d\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x16\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x03\0\x18\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x31\0\0\0\
\x12\0\x03\0\0\0\0\0\0\0\0\0\x60\0\0\0\0\0\0\0\x67\0\0\0\x11\0\x05\0\0\0\0\0\0\
\0\0\0\x20\0\0\0\0\0\0\0\x5f\0\0\0\x12\0\x03\0\x60\0\0\0\0\0\0\0\x60\0\0\0\0\0\
\0\0\x0c\x01\0\0\x11\0\x06\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\
\0\x01\0\0\0\x0c\0\0\0\x80\0\0\0\0\0\0\0\x01\0\0\0\x0c\0\0\0\x08\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\x11\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\x15\0\0\0\0\0\0\0\
\x03\0\0\0\x09\0\0\0\x1f\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x23\0\0\0\0\0\0\0\
\x03\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x0c\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x10\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x14\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x18\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x1c\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x20\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x24\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x28\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x2c\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x30\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x34\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x38\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x3c\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x40\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x44\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x48\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x4c\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x50\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x54\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x58\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x5c\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x64\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x68\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x6c\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x70\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x74\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x78\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x7c\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x80\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x84\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x88\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x8c\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x90\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x94\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x98\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x9c\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\xa0\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xa4\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\xa8\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xac\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\xb0\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xb4\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\xb8\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xbc\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\xc0\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xc4\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\xc8\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xcc\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\xd0\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xd4\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\xd8\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xdc\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\xe0\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xe4\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\xe8\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xec\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\xf0\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xf4\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\xf8\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\xfc\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\0\x01\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x04\x01\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x08\x01\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x0c\x01\0\0\0\0\0\
\0\x03\0\0\0\x06\0\0\0\x10\x01\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x14\x01\0\0\0\0\
\0\0\x03\0\0\0\x06\0\0\0\x08\0\0\0\0\0\0\0\x02\0\0\0\x0e\0\0\0\x10\0\0\0\0\0\0\
\0\x02\0\0\0\x0c\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x20\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\x58\x04\0\0\0\0\0\0\x04\0\0\0\x0c\0\0\0\x70\x04\0\0\0\0\0\
\0\x04\0\0\0\x0e\0\0\0\x2c\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x34\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x48\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x58\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x68\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x78\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x88\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x98\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\xa8\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xb8\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\xc8\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xd8\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\xe8\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xf8\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x14\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x18\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\x2c\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x30\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\x22\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x26\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x2a\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x36\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x4b\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x60\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x7a\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x0b\x0d\x0c\x0e\0\
\x2e\x64\x65\x62\x75\x67\x5f\x61\x62\x62\x72\x65\x76\0\x2e\x74\x65\x78\x74\0\
\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\x74\0\x2e\x72\x65\x6c\x70\x65\x72\
\x66\x5f\x65\x76\x65\x6e\x74\0\x6f\x6e\x5f\x68\x69\x74\0\x2e\x64\x65\x62\x75\
\x67\x5f\x6c\x6f\x63\x6c\x69\x73\x74\x73\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\
\x67\x5f\x73\x74\x72\x5f\x6f\x66\x66\x73\x65\x74\x73\0\x6f\x6e\x5f\x6d\x69\x73\
\x73\0\x63\x6f\x75\x6e\x74\x65\x72\x73\0\x2e\x6d\x61\x70\x73\0\x2e\x64\x65\x62\
\x75\x67\x5f\x73\x74\x72\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\x6e\x65\x5f\x73\
\x74\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x61\x64\x64\x72\0\x2e\
\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x69\x6e\x66\x6f\0\x2e\x6c\x6c\x76\x6d\
\x5f\x61\x64\x64\x72\x73\x69\x67\0\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x72\x65\
\x6c\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\x6e\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\
\x62\x75\x67\x5f\x66\x72\x61\x6d\x65\0\x70\x72\x6f\x67\x2e\x62\x70\x66\x2e\x63\
\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x65\x6c\
\x2e\x42\x54\x46\0\x4c\x49\x43\x45\x4e\x53\x45\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xf3\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb4\
\x1b\0\0\0\0\0\0\x14\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x0f\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x26\0\0\0\
\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\xc0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x22\0\0\0\x09\0\0\0\x40\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x15\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x1a\0\0\0\
\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x70\0\0\0\x01\0\0\0\x03\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xbf\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x20\x01\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x38\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x24\x01\0\
\0\0\0\0\0\x22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x01\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x46\x01\0\0\0\0\0\0\x37\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa5\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7d\x02\0\0\0\0\0\0\x61\x03\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa1\0\0\0\x09\0\0\0\x40\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x30\x15\0\0\0\0\0\0\x50\0\0\0\0\0\0\0\x1a\0\0\0\
\x09\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x4c\0\0\0\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xde\x05\0\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x48\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x80\x15\0\0\0\0\0\0\x40\x04\0\0\0\0\0\0\x1a\0\0\0\x0b\0\0\0\x08\0\0\
\0\0\0\0\0\x10\0\0\0\0\0\0\0\x76\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\xf6\x06\0\0\0\0\0\0\x51\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\x01\0\0\0\0\0\0\0\x95\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x47\x09\
\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x91\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc0\x19\0\0\0\0\0\0\
\x40\0\0\0\0\0\0\0\x1a\0\0\0\x0e\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x07\
\x01\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x70\x09\0\0\0\0\0\0\x92\x07\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x01\0\0\x09\
\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1a\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\
\x1a\0\0\0\x10\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x19\0\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\x11\0\0\0\0\0\0\x08\x01\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x15\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x20\x1a\0\0\0\0\0\0\xe0\0\0\0\0\0\0\0\x1a\0\0\0\x12\0\0\0\
\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xdb\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x10\x12\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xd7\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x1b\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x1a\0\0\0\x14\0\0\0\x08\0\0\0\0\0\0\0\x10\0\
\0\0\0\0\0\0\xcb\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x50\x12\0\0\0\
\0\0\0\xb7\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc7\
\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\x1b\0\0\0\0\0\0\x70\0\0\
\0\0\0\0\0\x1a\0\0\0\x16\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x81\0\0\0\
\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x07\x13\0\0\0\0\0\0\xa1\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\xb1\0\0\0\x03\x4c\xff\
\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\xb0\x1b\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\
\x1a\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xfb\0\0\0\x02\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\xa8\x13\0\0\0\0\0\0\x68\x01\0\0\0\0\0\0\x01\0\0\0\
\x0b\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0";

	*sz = sizeof(data) - 1;
	return (const void *)data;
}

#ifdef __cplusplus
struct prog_bpf *prog_bpf::open(const struct bpf_object_open_opts *opts) { return prog_bpf__open_opts(opts); }
struct prog_bpf *prog_bpf::open_and_load() { return prog_bpf__open_and_load(); }
int prog_bpf::load(struct prog_bpf *skel) { return prog_bpf__load(skel); }
int prog_bpf::attach(struct prog_bpf *skel) { return prog_bpf__attach(skel); }
void prog_bpf::detach(struct prog_bpf *skel) { prog_bpf__detach(skel); }
void prog_bpf::destroy(struct prog_bpf *skel) { prog_bpf__destroy(skel); }
const void *prog_bpf::elf_bytes(size_t *sz) { return prog_bpf__elf_bytes(sz); }
#endif /* __cplusplus */

__attribute__((unused)) static void
prog_bpf__assert(struct prog_bpf *s __attribute__((unused)))
{
#ifdef __cplusplus
#define _Static_assert static_assert
#endif
#ifdef __cplusplus
#undef _Static_assert
#endif
}

#endif /* __PROG_BPF_SKEL_H__ */
